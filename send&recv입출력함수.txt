@ 리눅스에서의 send & recv
ssize_t send(int sockfd, const void *buf, size_t nbytes, int flags);
	sockfd	: 데이터 전송 대상과의 연결을 의미하는 소켓의 파일 디스크립터 전달.
	buf		: 전송할 데이터를 저장하고 있는 버퍼의 주소 값 전달.
	nbytes	: 전송할 바이트 수 전달.
	flags	: 데이터 전송 시 적용할 다양한 옵션 정보 전달.
>> 성공 시 전송된 바이트 수, 실패 시 -1 반환

ssize_t recv(int sockfd, void *buf, size_t nbytes, int flags);
	sockfd	: 데이터 수신 대상과의 연결을 의미하는 소켓의 파일 디스크립터 전달.
	buf		: 수신된 데이터를 저장할 버퍼의 주소 값 전달.
	nbytes	: 수신할 수 있는 최대 바이트 수 전달.
	flags	: 데이터 수신 시 적용할 다양한 옵션 정보 전달.
>> 성공 시 수신한 바이트 수, 실패 시 -1 반환

@ send와 recv 마지막 매개 변수에서 옵션 정보를 전달 하는데, 비트 OR 연산자( | 연산자 )를 이용해서 둘 이상을 함께 전달할 수 있다.
	MSG_OOB			: 긴급 데이터(Out-of-band data)의 전송을 위한 옵션 ( send, recv )
	MSG_PEEK		: 입력 버퍼에 수신된 데이터의 존재 유무를 확인을 위한 옵션 ( recv )
	MSG_DONTROUTE	: 데이터 전송과정에서 라우팅(Routing) 테이블을 참조하지 않을 것을 요구하는 옵션, 따라서 로컬(Local) 네트워크상에서 목적지를 찾을 때 사용하는 옵션 ( send )
	MSG_DONTWAIT	: 입출력 함수 호출과정에서 블로킹 되지 않을 것을 요구하기 위한 옵션, 즉 넌-블로킹(Non-blocking) IO의 요구에 사용되는 옵션 ( send, recv )
	MSG_WAITALL		: 요청한 바이트 수에 해당하는 데이터가 전부 수신될 때까지, 호출된 함수가 반환되는 것을 막기 위한 옵션 ( recv )

